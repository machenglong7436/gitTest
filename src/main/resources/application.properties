
multipart.max-file-size=300Mb
multipart.max-request-size=300Mb

spring.session.store-type=redis

# 下面为连接池的补充设置，pgwdev
# 初始化大小，最小，最大
spring.datasource.initialSize=20
spring.datasource.minIdle=1
spring.datasource.maxActive=50
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true
###############以上为配置druid添加的配置########################################
# jpa
spring.jpa.hibernate.ddl-auto=none
spring.jpa.generate-ddl=true
spring.jpa.properties.hibernate.show_sql=true
spring.thymeleaf.cache=false
#mybatis==========================================================
mybatis.mapper-locations=classpath*:com/example/demo/mapping/*.xml
mybatis.type-aliases-package=com.haiercash.outreachplatform.**.entity
mybatis.dialect=org.apache.ibatis.dialect.OracleDialect
mybatis.bbase-package=com.example.demo.dao
mybatis.aliases-package=com.example.demo.data
mybatis.underscore-to-camel-case=true
# REDIS (RedisProperties)===========================================
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=10.164.194.123
# Redis服务器连接端口
spring.redis.port=10001
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=1000
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=10000
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=20
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=1
# 连接超时时间（毫秒）
#spring.redis.timeout=30
#rabbitmq============================================================
spring.rabbitmq.addresses=10.164.197.54:5672, 10.164.197.55:5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=123456
spring.rabbitmq.virtual-host=/
spring.rabbitmq.publisher-confirms=true
# 消费者开启ack
# Listener并行处理的消息数量，可以通过增加此数量提高消息处理效率
spring.rabbitmq.requestedHeartbeat=60
spring.rabbitmq.exchange=APPMSG_TOPIC_EXCHANGE
spring.rabbitmq.queue=APPMSG_OUTPLAT_CMISMSG_QUEUE
spring.rabbitmq.queuetwo=APPMSG_OUTPLAT_CMISMSG_QUEUE_28
# spring boot服务注册到Eureka Server上的应用名称
spring.application.name=outreachplatform_test
eureka.instance.prefer-ip-address=true
##是否注册自身到eureka服务器
eureka.client.register-with-eureka=true
## Eureka Server注册服务的地址
eureka.client.serviceUrl.defaultZone=http://10.164.197.209:1180/eureka/,http://10.164.197.209:1180/eureka/
#eureka.instance.appname=outreachplatform
eureka.instance.instanceId:${spring.application.name}@${spring.cloud.client.ipAddress}:${server.port}(${spring.cloud.client.hostname})
eureka.instance.appname:${spring.application.name}
eureka.instance.lease-renewal-interval-in-seconds=1
eureka.instance.lease-expiration-duration-in-seconds=2
eureka.client.registryFetchIntervalSeconds=5
eureka.client.eurekaServiceUrlPollIntervalSeconds=120
##是否从eureka服务器获取注册信息
#eureka.client.fetch-registry=true
ribbon.eureka.enabled=true
ribbon.ConnectTimeout=3000
ribbon.ReadTimeout=60000